name: Update Docker image
on: 
  push:
    branches:
      - master
      - production
jobs:
  test:
    name: Tests the build and caches the layers
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/production'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Test build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  build-staging:
    needs: test
    name: Build and pushes the staging image to the github registry
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Docker meta tags
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: |
            ghcr.io/${{ github.repository }}
          labels: |
            maintainer=${{ github.actor }}
            org.opencontainers.image.title=${{ github.repository }}
            org.opencontainers.image.description="Docker image for ${{ github.repository }}"
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.documentation=${{ github.repositoryUrl }}/blob/master/README.md
            org.opencontainers.image.licenses=MIT
          tags: |
            type=ref,event=branch
            type=raw,value=staging-${{ github.run_number }}
            type=semver,pattern={{version}}
          flavor: |
            latest=true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2     
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  build-production:
    needs: test
    name: Build and pushes the production image to the docker registry
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/production'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Docker meta tags
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: |
            ghcr.io/${{ github.repository }}
          labels: |
            maintainer=${{ github.actor }}
            org.opencontainers.image.title=${{ github.repository }}
            org.opencontainers.image.description="Docker image for ${{ github.repository }}"
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.documentation=${{ github.repositoryUrl }}/blob/production/README.md
            org.opencontainers.image.licenses=MIT
          tags: |
            type=ref,event=branch
            type=raw,value=latest-${{ github.run_number }}
            type=raw,value=production-${{ github.run_number }}
            type=semver,pattern={{version}}
          flavor: |
            latest=true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2     
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}